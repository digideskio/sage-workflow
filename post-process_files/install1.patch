From fe83cbc0b6ad476df64d2eb3b093e151ae3ebac7 Mon Sep 17 00:00:00 2001
From: "R. Andrew Ohana" <andrew.ohana@gmail.com>
Date: Sun, 17 Mar 2013 00:45:21 -0700
Subject: [PATCH] (FIXUP) move __SAGE_BUILD__/install to git layout

---

diff --git a/Makefile b/Makefile
index 740e5c9..667e237 100644
--- a/Makefile
+++ b/Makefile
@@ -7,12 +7,13 @@
 # See below for targets to build the documentation in other formats,
 # to run various types of test suites, and to remove parts of the build etc.
 
-PIPE = spkg/pipestatus
+PIPE = __SAGE_BUILD__/pipestatus
 
 all: start doc  # indirectly depends on build
 
 build:
-	cd spkg && \
+	@mkdir -p __SAGE_LOGS_DIR__
+	cd __SAGE_BUILD__ && \
 	"../$(PIPE)" \
 		"env SAGE_PARALLEL_SPKG_BUILD='$(SAGE_PARALLEL_SPKG_BUILD)' ./install all 2>&1" \
 		"tee -a ../install.log"
diff --git a/__SAGE_BUILD__/install b/__SAGE_BUILD__/install
index 58b0a8a..44d272e 100755
--- a/__SAGE_BUILD__/install
+++ b/__SAGE_BUILD__/install
@@ -4,15 +4,19 @@
 # Set various environment variables
 ########################################################################
 
-# Assume current directory is SAGE_ROOT/spkg
-SAGE_ROOT=`cd .. && pwd -P`
-SAGE_LOCAL="$SAGE_ROOT/local"
-SAGE_SHARE="$SAGE_LOCAL/share"
-SAGE_LOGS="$SAGE_ROOT/spkg/logs"
-SAGE_SPKG_INST="$SAGE_ROOT/spkg/installed"
-PATH="$SAGE_ROOT/spkg/bin:$SAGE_LOCAL/bin:$PATH"
-PYTHONPATH="$SAGE_LOCAL"
-export SAGE_ROOT SAGE_LOCAL SAGE_LOGS SAGE_SPKG_INST PATH PYTHONPATH
+# Assume current directory is SAGE_ROOT/__SAGE_BUILD__
+SAGE_ROOT="`cd .. && pwd -P`"
+if [ -z "$MAKEFLAGS" ]; then
+    unset MAKEFLAGS
+fi
+. "$SAGE_ROOT/src/bin/sage-env"
+PYTHONPATH="$SAGE_LOCAL/lib/python"
+if [ -n "$SAGE_PATH" ]; then
+    PYTHONPATH="$SAGE_PATH:$PYTHONPATH"
+fi
+PYTHONHOME="$SAGE_LOCAL"
+export PYTHONPATH PYTHONHOME
 
 # Storing the start time of the build process. The time is stored in
 # seconds since 1970-01-01 in a hidden file called
@@ -39,15 +43,8 @@ EOF
     exit 2
 fi
 
-# If spkg/bin/sage-env doesn't exist, we are surely upgrading (sage-env
-# was moved to spkg/bin in sage-5.0).  Manually set SAGE_UPGRADING=yes,
-# as old versions of sage-upgrade didn't do this.
-if [ ! -f "$SAGE_ROOT/spkg/bin/sage-env" ]; then
-    SAGE_UPGRADING=yes
-fi
-
 if [ "$SAGE_UPGRADING" = yes ]; then
-    # We're doing an upgrade. Let spkg/Makefile call sage-spkg with
+    # We're doing an upgrade. Let __SAGE_BUILD__/Makefile call sage-spkg with
     # "-f" to force rebuilding dependent packages, too:
     export SAGE_SPKG_OPTS="-f"
 
@@ -135,7 +132,7 @@ sleep 5
 fi
 
 # Determine various compilers.  These variables should not be exported,
-# they are only used in this spkg/install script to determine whether to
+# they are only used in this __SAGE_BUILD__/install script to determine whether to
 # install GCC.  The "real" $CC, $CXX,... variables for building Sage are
 # set in sage-env.
 
@@ -262,7 +259,7 @@ cat >"$SAGE_LOCAL/bin/sage_fortran" <<EOF
 #!/bin/sh
 
 if [ "x\$FC" = x ]; then
-    # Default value determined in spkg/install
+    # Default value determined in __SAGE_BUILD__/install
     myFC='${FC:-gfortran}'
 else
     myFC="\$FC"
@@ -285,7 +282,7 @@ if [ -f "$SAGE_FORTRAN_LIB" ]; then
 fi
 
 ###############################################################################
-# Create $SAGE_ROOT/spkg/Makefile starting from spkg/standard/deps
+# Create $SAGE_ROOT/__SAGE_BUILD__/Makefile starting from __SAGE_BUILD__/deps
 ###############################################################################
 
 exec 3>Makefile
@@ -293,7 +290,7 @@ exec 3>Makefile
 cat >&3 <<EOF
 #==============================================================================
 # This file has been automatically generated by
-#   $SAGE_ROOT/spkg/install
+#   $SAGE_ROOT/__SAGE_BUILD__/install
 # You should not edit it by hand
 #==============================================================================
 
@@ -329,25 +326,17 @@ newest_version_base() {
 }
 
 # Usage: newest_version $pkg
-# Print version number of latest (according to modification time)
-# standard or optional package $pkg
+# Print version number of latest standard package $pkg
 newest_version() {
     PKG=$1
-    # First find the most recent spkg.  We also look for *optional*
-    # packages since downloaded packages arrive in spkg/optional.
-    # As a fallback, we also look at the latest installed package.
-    for FILE in `{ ls -1t standard/$PKG-*.spkg optional/$PKG-*.spkg; ls -1t "$SAGE_SPKG_INST"/$PKG-*; } 2>/dev/null`
-    do
-        ANS=`echo "$FILE" | sed 's|.*/||; s|\.spkg||'`
-        if [ -n "$ANS" ]; then
-            echo "$ANS"
-            return 0
-        fi
-    done
-
-    echo >&2 "Cannot determine latest version of $PKG."
-    echo "$PKG"
-    return 1
+    if [ -f "$SAGE_ROOT/__SAGE_PKGS__/$PKG/package-version.txt" ]; then
+        echo -n $PKG-
+        cat "$SAGE_ROOT/__SAGE_PKGS__/$PKG/package-version.txt"
+    else
+        echo >&2 "Cannot determine latest version of $PKG."
+        echo "$PKG"
+        return 1
+    fi
 }
 
 cat >&3 <<EOF
@@ -371,7 +360,6 @@ ECL=`newest_version ecl`
 ECLIB=`newest_version eclib`
 ECM=`newest_version ecm`
 ELLIPTIC_CURVES=`newest_version elliptic_curves`
-EXTCODE=`newest_version extcode`
 FFLASFFPACK=`newest_version fflas_ffpack`
 FLINT=`newest_version flint`
 FLINTQS=`newest_version flintqs`
@@ -428,11 +416,8 @@ RPY=`newest_version rpy2`
 RATPOINTS=`newest_version ratpoints`
 READLINE=`newest_version readline`
 RUBIKS=`newest_version rubiks`
-SAGE=`newest_version sage`
 SAGENB=`newest_version sagenb`
 SAGETEX=`newest_version sagetex`
-SAGE_ROOT_REPO=`newest_version sage_root`
-SAGE_SCRIPTS=`newest_version sage_scripts`
 SCIPY=`newest_version scipy`
 SCONS=`newest_version scons`
 SETUPTOOLS=`newest_version setuptools`
@@ -463,17 +448,17 @@ if [ "$need_to_install_gcc" == yes ]; then
 fi
 echo >&3
 
-# Copy spkg/standard/deps
+# Copy __SAGE_BUILD__/deps
 cat >&3 <<EOF
 
 #==============================================================================
 # What follows now is a copy of
-#   $SAGE_ROOT/spkg/standard/deps
+#   $SAGE_ROOT/__SAGE_BUILD__/deps
 #==============================================================================
 
 EOF
 
-cat standard/deps >&3
+cat "$SAGE_ROOT/__SAGE_BUILD__/deps" >&3
 
 # Close the Makefile
 exec 3>&-
@@ -492,16 +477,9 @@ INST="`echo ${SAGE_SPKG_INST:-installed} | sed 's/ /\\\\ /g'`"
 # * If "make" doesn't understand the -q option (although we require
 #   GNU make, which supports it), it should exit with a non-zero status
 #   which is not a problem.
-# * Only do this check if spkg/bin/sage-spkg exists, as that means we
-#   are running sage-5.x and sage-spkg understands MAKEFLAGS.
-#   If we are upgrading, we might have a pre-4.8 version of sage-spkg
-#   which doesn't check MAKEFLAGS.
-#   See Trac #12248 and also #12016.
-if [ -f "$SAGE_ROOT/spkg/bin/sage-spkg" ]; then
-    if $MAKE -q INST="$INST" "$@"; then
-        echo "Nothing to (re)build / all up-to-date."
-        exit 0
-    fi
+if $MAKE -q INST="$INST" "$@"; then
+    echo "Nothing to (re)build / all up-to-date."
+    exit 0
 fi
 
 # Dump environment for debugging purposes:
@@ -530,7 +508,7 @@ EOF
 
 package: $base_f
 log file: $f
-build directory: ${SAGE_BUILD_DIR:-$SAGE_ROOT/spkg/build}/$base_f
+build directory: ${SAGE_BUILD_DIR:-$SAGE_ROOT/__SAGE_ARTIFACTS__}/$base_f
 EOF
         fi
     done
-- 
1.8.1.5

